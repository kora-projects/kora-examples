httpServer {
  publicApiHttpPort = 8080
  privateApiHttpPort = 8085
  telemetry.logging.enabled = true
}


cassandra {
  auth {
    login = ${CASSANDRA_USER}
    password = ${CASSANDRA_PASS}
  }
  basic {
    contactPoints = ${CASSANDRA_CONTACT_POINTS}
    dc = ${CASSANDRA_DC}
    sessionKeyspace = ${CASSANDRA_KEYSPACE}
    request {
      timeout = 5s
    }
  }
  telemetry.logging.enabled = true
}

pet-cache {
  expireAfterWrite = ${?CACHE_EXPIRE_WRITE}
  keyPrefix = "pet-"
}


lettuce {
  uri = ${REDIS_URL}
  user = ${REDIS_USER}
  password = ${REDIS_PASS}
  socketTimeout = 15s
  commandTimeout = 15s
}


openapi {
  management {
    enabled = true
    file = "openapi/http-server.yaml"
    swaggerui {
      enabled = true
    }
    rapidoc {
      enabled = true
    }
  }
}


resilient {
  circuitbreaker.pet {
    slidingWindowSize = 50
    minimumRequiredCalls = 25
    failureRateThreshold = 50
    waitDurationInOpenState = "25s"
    permittedCallsInHalfOpenState = 10
  }
  timeout.pet {
    duration = "5000ms"
  }
  retry.pet {
    delay = "500ms"
    delayStep = "5s"
    attempts = 3
    attempts = ${?RETRY_ATTEMPTS}
  }
}


logging.level {
  "root": "WARN"
  "root": ${?LOGGING_LEVEL_ALL}
  "root": ${?LOGGING_LEVEL_ROOT}

  "ru.tinkoff.kora": "INFO"
  "ru.tinkoff.kora": ${?LOGGING_LEVEL_ALL}
  "ru.tinkoff.kora": ${?LOGGING_LEVEL_KORA}
  "ru.tinkoff.kora.http.server": ${?LOGGING_LEVEL_ALL}
  "ru.tinkoff.kora.http.server": ${?LOGGING_LEVEL_KORA_HTTP_SERVER}
  "ru.tinkoff.kora.database": ${?LOGGING_LEVEL_ALL}
  "ru.tinkoff.kora.database": ${?LOGGING_LEVEL_KORA_DATABASE}
  "ru.tinkoff.kora.cache": ${?LOGGING_LEVEL_ALL}
  "ru.tinkoff.kora.cache": ${?LOGGING_LEVEL_KORA_CACHE}
  "ru.tinkoff.kora.resilient": ${?LOGGING_LEVEL_ALL}
  "ru.tinkoff.kora.resilient": ${?LOGGING_LEVEL_KORA_RESILIENT}

  "ru.tinkoff.kora.example": "INFO"
  "ru.tinkoff.kora.example": ${?LOGGING_LEVEL_ALL}
  "ru.tinkoff.kora.example": ${?LOGGING_LEVEL_APP}
}
